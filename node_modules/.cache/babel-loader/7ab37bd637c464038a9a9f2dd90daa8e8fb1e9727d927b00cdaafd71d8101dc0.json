{"ast":null,"code":"// Body scroll manager to prevent conflicts between multiple modals\nclass BodyScrollManager {\n  constructor() {\n    this.lockCount = 0;\n    this.originalOverflow = '';\n  }\n  lock() {\n    if (this.lockCount === 0) {\n      // Store original overflow value\n      this.originalOverflow = document.body.style.overflow || '';\n      document.body.style.overflow = 'hidden';\n    }\n    this.lockCount++;\n  }\n  unlock() {\n    this.lockCount = Math.max(0, this.lockCount - 1);\n    if (this.lockCount === 0) {\n      // Restore original overflow value\n      document.body.style.overflow = this.originalOverflow;\n    }\n  }\n\n  // Force unlock (for cleanup)\n  forceUnlock() {\n    console.log('Force unlocking body scroll, lockCount was:', this.lockCount);\n    this.lockCount = 0;\n    document.body.style.overflow = this.originalOverflow || '';\n    console.log('Body overflow reset to:', document.body.style.overflow);\n  }\n\n  // Debug method\n  getStatus() {\n    return {\n      lockCount: this.lockCount,\n      currentOverflow: document.body.style.overflow,\n      originalOverflow: this.originalOverflow\n    };\n  }\n}\n\n// Create singleton instance\nconst bodyScrollManager = new BodyScrollManager();\nexport default bodyScrollManager;","map":{"version":3,"names":["BodyScrollManager","constructor","lockCount","originalOverflow","lock","document","body","style","overflow","unlock","Math","max","forceUnlock","console","log","getStatus","currentOverflow","bodyScrollManager"],"sources":["/Users/renzoservera/Desktop/referral-network-react/src/utils/bodyScrollManager.js"],"sourcesContent":["// Body scroll manager to prevent conflicts between multiple modals\nclass BodyScrollManager {\n  constructor() {\n    this.lockCount = 0;\n    this.originalOverflow = '';\n  }\n\n  lock() {\n    if (this.lockCount === 0) {\n      // Store original overflow value\n      this.originalOverflow = document.body.style.overflow || '';\n      document.body.style.overflow = 'hidden';\n    }\n    this.lockCount++;\n  }\n\n  unlock() {\n    this.lockCount = Math.max(0, this.lockCount - 1);\n    \n    if (this.lockCount === 0) {\n      // Restore original overflow value\n      document.body.style.overflow = this.originalOverflow;\n    }\n  }\n\n  // Force unlock (for cleanup)\n  forceUnlock() {\n    console.log('Force unlocking body scroll, lockCount was:', this.lockCount);\n    this.lockCount = 0;\n    document.body.style.overflow = this.originalOverflow || '';\n    console.log('Body overflow reset to:', document.body.style.overflow);\n  }\n\n  // Debug method\n  getStatus() {\n    return {\n      lockCount: this.lockCount,\n      currentOverflow: document.body.style.overflow,\n      originalOverflow: this.originalOverflow\n    };\n  }\n}\n\n// Create singleton instance\nconst bodyScrollManager = new BodyScrollManager();\n\nexport default bodyScrollManager;"],"mappings":"AAAA;AACA,MAAMA,iBAAiB,CAAC;EACtBC,WAAWA,CAAA,EAAG;IACZ,IAAI,CAACC,SAAS,GAAG,CAAC;IAClB,IAAI,CAACC,gBAAgB,GAAG,EAAE;EAC5B;EAEAC,IAAIA,CAAA,EAAG;IACL,IAAI,IAAI,CAACF,SAAS,KAAK,CAAC,EAAE;MACxB;MACA,IAAI,CAACC,gBAAgB,GAAGE,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,QAAQ,IAAI,EAAE;MAC1DH,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,QAAQ,GAAG,QAAQ;IACzC;IACA,IAAI,CAACN,SAAS,EAAE;EAClB;EAEAO,MAAMA,CAAA,EAAG;IACP,IAAI,CAACP,SAAS,GAAGQ,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE,IAAI,CAACT,SAAS,GAAG,CAAC,CAAC;IAEhD,IAAI,IAAI,CAACA,SAAS,KAAK,CAAC,EAAE;MACxB;MACAG,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,QAAQ,GAAG,IAAI,CAACL,gBAAgB;IACtD;EACF;;EAEA;EACAS,WAAWA,CAAA,EAAG;IACZC,OAAO,CAACC,GAAG,CAAC,6CAA6C,EAAE,IAAI,CAACZ,SAAS,CAAC;IAC1E,IAAI,CAACA,SAAS,GAAG,CAAC;IAClBG,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,QAAQ,GAAG,IAAI,CAACL,gBAAgB,IAAI,EAAE;IAC1DU,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAET,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,QAAQ,CAAC;EACtE;;EAEA;EACAO,SAASA,CAAA,EAAG;IACV,OAAO;MACLb,SAAS,EAAE,IAAI,CAACA,SAAS;MACzBc,eAAe,EAAEX,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,QAAQ;MAC7CL,gBAAgB,EAAE,IAAI,CAACA;IACzB,CAAC;EACH;AACF;;AAEA;AACA,MAAMc,iBAAiB,GAAG,IAAIjB,iBAAiB,CAAC,CAAC;AAEjD,eAAeiB,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}