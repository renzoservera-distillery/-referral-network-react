{"ast":null,"code":"import React,{useEffect}from'react';import Icon from'../Icon';import bodyScrollManager from'../../utils/bodyScrollManager';import'./ConfirmationModal.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ConfirmationModal=_ref=>{let{isOpen,onClose,onConfirm,title=\"Confirm Action\",message=\"Are you sure you want to proceed?\",confirmText=\"Confirm\",cancelText=\"Cancel\",type=\"warning\"// warning, danger, info\n}=_ref;const modalRef=React.useRef(null);const cancelButtonRef=React.useRef(null);const handleOverlayClick=e=>{if(e.target===e.currentTarget){onClose();}};const handleConfirm=()=>{onConfirm();onClose();};// Focus management and body scroll prevention\nuseEffect(()=>{if(isOpen){// Store previously focused element\nconst previouslyFocused=document.activeElement;// Focus cancel button when modal opens (safer default for confirmation)\nsetTimeout(()=>{if(cancelButtonRef.current){cancelButtonRef.current.focus();}},100);// Prevent body scroll\nbodyScrollManager.lock();return()=>{// Restore body scroll and focus\nbodyScrollManager.unlock();if(previouslyFocused&&previouslyFocused.focus){previouslyFocused.focus();}};}},[isOpen]);// Keyboard handling with focus trap\nuseEffect(()=>{if(!isOpen)return;const handleKeyDown=e=>{if(e.key==='Escape'){onClose();return;}if(e.key==='Tab'){var _modalRef$current;const focusableElements=(_modalRef$current=modalRef.current)===null||_modalRef$current===void 0?void 0:_modalRef$current.querySelectorAll('button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])');if(focusableElements!==null&&focusableElements!==void 0&&focusableElements.length){const firstElement=focusableElements[0];const lastElement=focusableElements[focusableElements.length-1];if(e.shiftKey&&document.activeElement===firstElement){e.preventDefault();lastElement.focus();}else if(!e.shiftKey&&document.activeElement===lastElement){e.preventDefault();firstElement.focus();}}}};document.addEventListener('keydown',handleKeyDown);return()=>document.removeEventListener('keydown',handleKeyDown);},[isOpen,onClose]);if(!isOpen)return null;return/*#__PURE__*/_jsx(\"div\",{className:\"confirmation-modal-overlay\",onClick:handleOverlayClick,children:/*#__PURE__*/_jsxs(\"div\",{className:\"confirmation-modal\",ref:modalRef,role:\"alertdialog\",\"aria-modal\":\"true\",\"aria-labelledby\":\"confirmation-title\",\"aria-describedby\":\"confirmation-message\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"confirmation-modal-header\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"confirmation-icon \".concat(type),\"aria-hidden\":\"true\",children:[type==='warning'&&/*#__PURE__*/_jsx(Icon,{name:\"alert\",size:32}),type==='danger'&&/*#__PURE__*/_jsx(Icon,{name:\"alert\",size:32}),type==='info'&&/*#__PURE__*/_jsx(Icon,{name:\"info\",size:32})]}),/*#__PURE__*/_jsx(\"button\",{className:\"modal-close-btn\",onClick:onClose,\"aria-label\":\"Close\",children:/*#__PURE__*/_jsx(Icon,{name:\"close\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"confirmation-modal-content\",children:[/*#__PURE__*/_jsx(\"h2\",{id:\"confirmation-title\",children:title}),/*#__PURE__*/_jsx(\"p\",{id:\"confirmation-message\",children:message})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"confirmation-modal-footer\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"btn-cancel\",onClick:onClose,ref:cancelButtonRef,children:cancelText}),/*#__PURE__*/_jsx(\"button\",{className:\"btn-confirm \".concat(type),onClick:handleConfirm,autoFocus:true,children:confirmText})]})]})});};export default ConfirmationModal;","map":{"version":3,"names":["React","useEffect","Icon","bodyScrollManager","jsx","_jsx","jsxs","_jsxs","ConfirmationModal","_ref","isOpen","onClose","onConfirm","title","message","confirmText","cancelText","type","modalRef","useRef","cancelButtonRef","handleOverlayClick","e","target","currentTarget","handleConfirm","previouslyFocused","document","activeElement","setTimeout","current","focus","lock","unlock","handleKeyDown","key","_modalRef$current","focusableElements","querySelectorAll","length","firstElement","lastElement","shiftKey","preventDefault","addEventListener","removeEventListener","className","onClick","children","ref","role","concat","name","size","id","autoFocus"],"sources":["/Users/renzoservera/Desktop/referral-network-react/src/components/ConfirmationModal/ConfirmationModal.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport Icon from '../Icon';\nimport bodyScrollManager from '../../utils/bodyScrollManager';\nimport './ConfirmationModal.css';\n\nconst ConfirmationModal = ({ \n  isOpen, \n  onClose, \n  onConfirm, \n  title = \"Confirm Action\",\n  message = \"Are you sure you want to proceed?\",\n  confirmText = \"Confirm\",\n  cancelText = \"Cancel\",\n  type = \"warning\" // warning, danger, info\n}) => {\n  const modalRef = React.useRef(null);\n  const cancelButtonRef = React.useRef(null);\n  const handleOverlayClick = (e) => {\n    if (e.target === e.currentTarget) {\n      onClose();\n    }\n  };\n\n  const handleConfirm = () => {\n    onConfirm();\n    onClose();\n  };\n\n  // Focus management and body scroll prevention\n  useEffect(() => {\n    if (isOpen) {\n      // Store previously focused element\n      const previouslyFocused = document.activeElement;\n      \n      // Focus cancel button when modal opens (safer default for confirmation)\n      setTimeout(() => {\n        if (cancelButtonRef.current) {\n          cancelButtonRef.current.focus();\n        }\n      }, 100);\n\n      // Prevent body scroll\n      bodyScrollManager.lock();\n\n      return () => {\n        // Restore body scroll and focus\n        bodyScrollManager.unlock();\n        if (previouslyFocused && previouslyFocused.focus) {\n          previouslyFocused.focus();\n        }\n      };\n    }\n  }, [isOpen]);\n\n  // Keyboard handling with focus trap\n  useEffect(() => {\n    if (!isOpen) return;\n\n    const handleKeyDown = (e) => {\n      if (e.key === 'Escape') {\n        onClose();\n        return;\n      }\n\n      if (e.key === 'Tab') {\n        const focusableElements = modalRef.current?.querySelectorAll(\n          'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'\n        );\n        \n        if (focusableElements?.length) {\n          const firstElement = focusableElements[0];\n          const lastElement = focusableElements[focusableElements.length - 1];\n\n          if (e.shiftKey && document.activeElement === firstElement) {\n            e.preventDefault();\n            lastElement.focus();\n          } else if (!e.shiftKey && document.activeElement === lastElement) {\n            e.preventDefault();\n            firstElement.focus();\n          }\n        }\n      }\n    };\n\n    document.addEventListener('keydown', handleKeyDown);\n    return () => document.removeEventListener('keydown', handleKeyDown);\n  }, [isOpen, onClose]);\n\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"confirmation-modal-overlay\" onClick={handleOverlayClick}>\n      <div \n        className=\"confirmation-modal\"\n        ref={modalRef}\n        role=\"alertdialog\"\n        aria-modal=\"true\"\n        aria-labelledby=\"confirmation-title\"\n        aria-describedby=\"confirmation-message\"\n      >\n        <div className=\"confirmation-modal-header\">\n          <div className={`confirmation-icon ${type}`} aria-hidden=\"true\">\n            {type === 'warning' && <Icon name=\"alert\" size={32} />}\n            {type === 'danger' && <Icon name=\"alert\" size={32} />}\n            {type === 'info' && <Icon name=\"info\" size={32} />}\n          </div>\n          <button className=\"modal-close-btn\" onClick={onClose} aria-label=\"Close\">\n            <Icon name=\"close\" />\n          </button>\n        </div>\n\n        <div className=\"confirmation-modal-content\">\n          <h2 id=\"confirmation-title\">{title}</h2>\n          <p id=\"confirmation-message\">{message}</p>\n        </div>\n\n        <div className=\"confirmation-modal-footer\">\n          <button \n            className=\"btn-cancel\" \n            onClick={onClose}\n            ref={cancelButtonRef}\n          >\n            {cancelText}\n          </button>\n          <button \n            className={`btn-confirm ${type}`}\n            onClick={handleConfirm}\n            autoFocus\n          >\n            {confirmText}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ConfirmationModal;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}