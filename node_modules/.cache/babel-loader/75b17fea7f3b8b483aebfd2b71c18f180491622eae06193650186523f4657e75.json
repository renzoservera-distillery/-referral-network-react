{"ast":null,"code":"var _jsxFileName = \"/Users/renzoservera/Desktop/referral-network-react/src/components/AttorneyCarousel/AttorneyCarousel.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Icon from '../Icon';\nimport AddToNetworkModal from '../AddToNetworkModal';\nimport './AttorneyCarousel.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AttorneyCard = ({\n  attorney,\n  onAddClick,\n  isDragging,\n  wasDragged\n}) => {\n  const handleClick = e => {\n    // Prevent click if we were dragging or are currently dragging\n    if (isDragging || wasDragged) {\n      e.preventDefault();\n      e.stopPropagation();\n      return;\n    }\n    onAddClick(attorney);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `attorney-card ${isDragging ? 'dragging' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"attorney-avatar\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `https://ui-avatars.com/api/?name=${attorney.initials}&background=random`,\n        alt: attorney.name,\n        draggable: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"attorney-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"attorney-name\",\n        children: attorney.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"attorney-firm\",\n        children: attorney.firm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"attorney-location\",\n        children: attorney.location\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"attorney-specialties\",\n        children: attorney.specialties.map((specialty, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"specialty-tag\",\n          children: specialty\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"attorney-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-add\",\n        onClick: handleClick,\n        children: \"Add to Network\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_c = AttorneyCard;\nconst AttorneyCarousel = ({\n  attorneys,\n  categoryId,\n  title,\n  onAttorneyAdd\n}) => {\n  _s();\n  const [currentPosition, setCurrentPosition] = useState(0);\n  const [selectedAttorney, setSelectedAttorney] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [isDragging, setIsDragging] = useState(false);\n  const [dragStart, setDragStart] = useState({\n    x: 0,\n    position: 0\n  });\n  const [dragOffset, setDragOffset] = useState(0);\n  const [wasDragged, setWasDragged] = useState(false);\n  const cardsPerView = 2;\n  const totalCards = attorneys.length;\n  const maxPosition = Math.max(0, totalCards - cardsPerView);\n  const navigateNext = () => {\n    if (currentPosition < maxPosition) {\n      setCurrentPosition(currentPosition + 1);\n    }\n  };\n  const navigatePrev = () => {\n    if (currentPosition > 0) {\n      setCurrentPosition(currentPosition - 1);\n    }\n  };\n  const handleAddClick = attorney => {\n    setSelectedAttorney(attorney);\n    setIsModalOpen(true);\n  };\n  const handleAddToNetwork = networkSettings => {\n    if (onAttorneyAdd) {\n      onAttorneyAdd(networkSettings);\n    }\n    setIsModalOpen(false);\n  };\n\n  // Mouse drag handlers\n  const handleMouseDown = e => {\n    // Don't start drag if clicking on a button\n    if (e.target.classList.contains('btn-add')) {\n      return;\n    }\n    e.preventDefault();\n    setIsDragging(true);\n    setWasDragged(false);\n    setDragStart({\n      x: e.clientX,\n      position: currentPosition\n    });\n    setDragOffset(0);\n    document.body.style.userSelect = 'none';\n  };\n  const handleMouseMove = e => {\n    if (!isDragging) return;\n    const deltaX = e.clientX - dragStart.x;\n    const containerWidth = 400; // More accurate carousel width per card\n    const dragDistance = -deltaX / containerWidth;\n\n    // Mark as dragged if moved significantly\n    if (Math.abs(deltaX) > 5) {\n      setWasDragged(true);\n    }\n\n    // Calculate new position with constraints\n    let newPosition = dragStart.position + dragDistance;\n    newPosition = Math.max(0, Math.min(newPosition, maxPosition));\n    const finalOffset = newPosition - dragStart.position;\n    setDragOffset(finalOffset);\n  };\n  const handleMouseUp = e => {\n    if (!isDragging) return;\n    setIsDragging(false);\n    document.body.style.userSelect = '';\n\n    // Calculate final position based on drag distance\n    const finalPosition = dragStart.position + dragOffset;\n\n    // Determine snap position based on drag distance\n    let snapPosition;\n    if (Math.abs(dragOffset) > 0.3) {\n      // If dragged significantly, snap to the direction of drag\n      snapPosition = dragOffset > 0 ? Math.ceil(finalPosition) : Math.floor(finalPosition);\n    } else {\n      // If small drag, snap to nearest whole position\n      snapPosition = Math.round(finalPosition);\n    }\n\n    // Constrain to valid range\n    const constrainedPosition = Math.max(0, Math.min(snapPosition, maxPosition));\n\n    // Set the final position and reset drag offset\n    setCurrentPosition(constrainedPosition);\n    setDragOffset(0);\n\n    // Reset wasDragged after a short delay to allow click prevention\n    setTimeout(() => setWasDragged(false), 100);\n  };\n\n  // Touch drag handlers for mobile\n  const handleTouchStart = e => {\n    // Don't start drag if touching a button\n    if (e.target.classList.contains('btn-add')) {\n      return;\n    }\n    const touch = e.touches[0];\n    setIsDragging(true);\n    setWasDragged(false);\n    setDragStart({\n      x: touch.clientX,\n      position: currentPosition\n    });\n    setDragOffset(0);\n  };\n  const handleTouchMove = e => {\n    if (!isDragging) return;\n    e.preventDefault();\n    const touch = e.touches[0];\n    const deltaX = touch.clientX - dragStart.x;\n    const containerWidth = 400;\n    const dragDistance = -deltaX / containerWidth;\n    let newPosition = dragStart.position + dragDistance;\n    newPosition = Math.max(0, Math.min(newPosition, maxPosition));\n    const finalOffset = newPosition - dragStart.position;\n    setDragOffset(finalOffset);\n  };\n  const handleTouchEnd = () => {\n    if (!isDragging) return;\n    setIsDragging(false);\n\n    // Calculate final position based on drag distance\n    const finalPosition = dragStart.position + dragOffset;\n\n    // Determine snap position based on drag distance\n    let snapPosition;\n    if (Math.abs(dragOffset) > 0.3) {\n      // If dragged significantly, snap to the direction of drag\n      snapPosition = dragOffset > 0 ? Math.ceil(finalPosition) : Math.floor(finalPosition);\n    } else {\n      // If small drag, snap to nearest whole position\n      snapPosition = Math.round(finalPosition);\n    }\n\n    // Constrain to valid range\n    const constrainedPosition = Math.max(0, Math.min(snapPosition, maxPosition));\n    setCurrentPosition(constrainedPosition);\n    setDragOffset(0);\n  };\n\n  // Add global mouse event listeners\n  React.useEffect(() => {\n    if (isDragging) {\n      document.addEventListener('mousemove', handleMouseMove);\n      document.addEventListener('mouseup', handleMouseUp);\n      return () => {\n        document.removeEventListener('mousemove', handleMouseMove);\n        document.removeEventListener('mouseup', handleMouseUp);\n      };\n    }\n  }, [isDragging, dragStart, dragOffset, maxPosition]);\n  const translateX = -((currentPosition + dragOffset) * (100 / cardsPerView));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"attorney-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"section-title\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"carousel-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `carousel-btn carousel-prev ${currentPosition === 0 ? 'disabled' : ''}`,\n        onClick: navigatePrev,\n        disabled: currentPosition === 0,\n        \"aria-label\": \"Previous\",\n        children: /*#__PURE__*/_jsxDEV(Icon, {\n          name: \"chevron-left\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"attorney-carousel\",\n        onMouseDown: handleMouseDown,\n        onTouchStart: handleTouchStart,\n        onTouchMove: handleTouchMove,\n        onTouchEnd: handleTouchEnd,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `attorney-carousel-track ${isDragging ? 'dragging' : ''}`,\n          style: {\n            transform: `translateX(${translateX}%)`,\n            transition: isDragging ? 'none' : 'transform 0.3s ease'\n          },\n          children: attorneys.map((attorney, index) => /*#__PURE__*/_jsxDEV(AttorneyCard, {\n            attorney: attorney,\n            onAddClick: handleAddClick,\n            isDragging: isDragging,\n            wasDragged: wasDragged\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `carousel-btn carousel-next ${currentPosition >= maxPosition ? 'disabled' : ''}`,\n        onClick: navigateNext,\n        disabled: currentPosition >= maxPosition,\n        \"aria-label\": \"Next\",\n        children: /*#__PURE__*/_jsxDEV(Icon, {\n          name: \"chevron-right\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddToNetworkModal, {\n      isOpen: isModalOpen,\n      onClose: () => setIsModalOpen(false),\n      attorney: selectedAttorney,\n      onAdd: handleAddToNetwork\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 228,\n    columnNumber: 5\n  }, this);\n};\n_s(AttorneyCarousel, \"yVizF5hhRwA5cTBAjkyPhWVm+1Y=\");\n_c2 = AttorneyCarousel;\nexport default AttorneyCarousel;\nvar _c, _c2;\n$RefreshReg$(_c, \"AttorneyCard\");\n$RefreshReg$(_c2, \"AttorneyCarousel\");","map":{"version":3,"names":["React","useState","Icon","AddToNetworkModal","jsxDEV","_jsxDEV","AttorneyCard","attorney","onAddClick","isDragging","wasDragged","handleClick","e","preventDefault","stopPropagation","className","children","src","initials","alt","name","draggable","fileName","_jsxFileName","lineNumber","columnNumber","firm","location","specialties","map","specialty","index","onClick","_c","AttorneyCarousel","attorneys","categoryId","title","onAttorneyAdd","_s","currentPosition","setCurrentPosition","selectedAttorney","setSelectedAttorney","isModalOpen","setIsModalOpen","setIsDragging","dragStart","setDragStart","x","position","dragOffset","setDragOffset","setWasDragged","cardsPerView","totalCards","length","maxPosition","Math","max","navigateNext","navigatePrev","handleAddClick","handleAddToNetwork","networkSettings","handleMouseDown","target","classList","contains","clientX","document","body","style","userSelect","handleMouseMove","deltaX","containerWidth","dragDistance","abs","newPosition","min","finalOffset","handleMouseUp","finalPosition","snapPosition","ceil","floor","round","constrainedPosition","setTimeout","handleTouchStart","touch","touches","handleTouchMove","handleTouchEnd","useEffect","addEventListener","removeEventListener","translateX","disabled","onMouseDown","onTouchStart","onTouchMove","onTouchEnd","transform","transition","isOpen","onClose","onAdd","_c2","$RefreshReg$"],"sources":["/Users/renzoservera/Desktop/referral-network-react/src/components/AttorneyCarousel/AttorneyCarousel.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport Icon from '../Icon';\nimport AddToNetworkModal from '../AddToNetworkModal';\nimport './AttorneyCarousel.css';\n\nconst AttorneyCard = ({ attorney, onAddClick, isDragging, wasDragged }) => {\n  const handleClick = (e) => {\n    // Prevent click if we were dragging or are currently dragging\n    if (isDragging || wasDragged) {\n      e.preventDefault();\n      e.stopPropagation();\n      return;\n    }\n    onAddClick(attorney);\n  };\n\n  return (\n    <div className={`attorney-card ${isDragging ? 'dragging' : ''}`}>\n      <div className=\"attorney-avatar\">\n        <img\n          src={`https://ui-avatars.com/api/?name=${attorney.initials}&background=random`}\n          alt={attorney.name}\n          draggable={false}\n        />\n      </div>\n      <div className=\"attorney-info\">\n        <h4 className=\"attorney-name\">{attorney.name}</h4>\n        <p className=\"attorney-firm\">{attorney.firm}</p>\n        <p className=\"attorney-location\">{attorney.location}</p>\n        <div className=\"attorney-specialties\">\n          {attorney.specialties.map((specialty, index) => (\n            <span key={index} className=\"specialty-tag\">\n              {specialty}\n            </span>\n          ))}\n        </div>\n      </div>\n      <div className=\"attorney-actions\">\n        <button \n          className=\"btn-add\" \n          onClick={handleClick}\n        >\n          Add to Network\n        </button>\n      </div>\n    </div>\n  );\n};\n\nconst AttorneyCarousel = ({ attorneys, categoryId, title, onAttorneyAdd }) => {\n  const [currentPosition, setCurrentPosition] = useState(0);\n  const [selectedAttorney, setSelectedAttorney] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [isDragging, setIsDragging] = useState(false);\n  const [dragStart, setDragStart] = useState({ x: 0, position: 0 });\n  const [dragOffset, setDragOffset] = useState(0);\n  const [wasDragged, setWasDragged] = useState(false);\n  \n  const cardsPerView = 2;\n  const totalCards = attorneys.length;\n  const maxPosition = Math.max(0, totalCards - cardsPerView);\n\n  const navigateNext = () => {\n    if (currentPosition < maxPosition) {\n      setCurrentPosition(currentPosition + 1);\n    }\n  };\n\n  const navigatePrev = () => {\n    if (currentPosition > 0) {\n      setCurrentPosition(currentPosition - 1);\n    }\n  };\n\n  const handleAddClick = (attorney) => {\n    setSelectedAttorney(attorney);\n    setIsModalOpen(true);\n  };\n\n  const handleAddToNetwork = (networkSettings) => {\n    if (onAttorneyAdd) {\n      onAttorneyAdd(networkSettings);\n    }\n    setIsModalOpen(false);\n  };\n\n  // Mouse drag handlers\n  const handleMouseDown = (e) => {\n    // Don't start drag if clicking on a button\n    if (e.target.classList.contains('btn-add')) {\n      return;\n    }\n    \n    e.preventDefault();\n    setIsDragging(true);\n    setWasDragged(false);\n    setDragStart({\n      x: e.clientX,\n      position: currentPosition\n    });\n    setDragOffset(0);\n    document.body.style.userSelect = 'none';\n  };\n\n  const handleMouseMove = (e) => {\n    if (!isDragging) return;\n    \n    const deltaX = e.clientX - dragStart.x;\n    const containerWidth = 400; // More accurate carousel width per card\n    const dragDistance = -deltaX / containerWidth;\n    \n    // Mark as dragged if moved significantly\n    if (Math.abs(deltaX) > 5) {\n      setWasDragged(true);\n    }\n    \n    // Calculate new position with constraints\n    let newPosition = dragStart.position + dragDistance;\n    newPosition = Math.max(0, Math.min(newPosition, maxPosition));\n    \n    const finalOffset = newPosition - dragStart.position;\n    setDragOffset(finalOffset);\n  };\n\n  const handleMouseUp = (e) => {\n    if (!isDragging) return;\n    \n    setIsDragging(false);\n    document.body.style.userSelect = '';\n    \n    // Calculate final position based on drag distance\n    const finalPosition = dragStart.position + dragOffset;\n    \n    // Determine snap position based on drag distance\n    let snapPosition;\n    if (Math.abs(dragOffset) > 0.3) {\n      // If dragged significantly, snap to the direction of drag\n      snapPosition = dragOffset > 0 ? Math.ceil(finalPosition) : Math.floor(finalPosition);\n    } else {\n      // If small drag, snap to nearest whole position\n      snapPosition = Math.round(finalPosition);\n    }\n    \n    // Constrain to valid range\n    const constrainedPosition = Math.max(0, Math.min(snapPosition, maxPosition));\n    \n    // Set the final position and reset drag offset\n    setCurrentPosition(constrainedPosition);\n    setDragOffset(0);\n    \n    // Reset wasDragged after a short delay to allow click prevention\n    setTimeout(() => setWasDragged(false), 100);\n  };\n\n  // Touch drag handlers for mobile\n  const handleTouchStart = (e) => {\n    // Don't start drag if touching a button\n    if (e.target.classList.contains('btn-add')) {\n      return;\n    }\n    \n    const touch = e.touches[0];\n    setIsDragging(true);\n    setWasDragged(false);\n    setDragStart({\n      x: touch.clientX,\n      position: currentPosition\n    });\n    setDragOffset(0);\n  };\n\n  const handleTouchMove = (e) => {\n    if (!isDragging) return;\n    e.preventDefault();\n    \n    const touch = e.touches[0];\n    const deltaX = touch.clientX - dragStart.x;\n    const containerWidth = 400;\n    const dragDistance = -deltaX / containerWidth;\n    \n    let newPosition = dragStart.position + dragDistance;\n    newPosition = Math.max(0, Math.min(newPosition, maxPosition));\n    \n    const finalOffset = newPosition - dragStart.position;\n    setDragOffset(finalOffset);\n  };\n\n  const handleTouchEnd = () => {\n    if (!isDragging) return;\n    \n    setIsDragging(false);\n    \n    // Calculate final position based on drag distance\n    const finalPosition = dragStart.position + dragOffset;\n    \n    // Determine snap position based on drag distance\n    let snapPosition;\n    if (Math.abs(dragOffset) > 0.3) {\n      // If dragged significantly, snap to the direction of drag\n      snapPosition = dragOffset > 0 ? Math.ceil(finalPosition) : Math.floor(finalPosition);\n    } else {\n      // If small drag, snap to nearest whole position\n      snapPosition = Math.round(finalPosition);\n    }\n    \n    // Constrain to valid range\n    const constrainedPosition = Math.max(0, Math.min(snapPosition, maxPosition));\n    \n    setCurrentPosition(constrainedPosition);\n    setDragOffset(0);\n  };\n\n  // Add global mouse event listeners\n  React.useEffect(() => {\n    if (isDragging) {\n      document.addEventListener('mousemove', handleMouseMove);\n      document.addEventListener('mouseup', handleMouseUp);\n      return () => {\n        document.removeEventListener('mousemove', handleMouseMove);\n        document.removeEventListener('mouseup', handleMouseUp);\n      };\n    }\n  }, [isDragging, dragStart, dragOffset, maxPosition]);\n\n  const translateX = -((currentPosition + dragOffset) * (100 / cardsPerView));\n\n  return (\n    <section className=\"attorney-section\">\n      <h3 className=\"section-title\">{title}</h3>\n      <div className=\"carousel-container\">\n        <button\n          className={`carousel-btn carousel-prev ${currentPosition === 0 ? 'disabled' : ''}`}\n          onClick={navigatePrev}\n          disabled={currentPosition === 0}\n          aria-label=\"Previous\"\n        >\n          <Icon name=\"chevron-left\" />\n        </button>\n        \n        <div \n          className=\"attorney-carousel\"\n          onMouseDown={handleMouseDown}\n          onTouchStart={handleTouchStart}\n          onTouchMove={handleTouchMove}\n          onTouchEnd={handleTouchEnd}\n        >\n          <div\n            className={`attorney-carousel-track ${isDragging ? 'dragging' : ''}`}\n            style={{ \n              transform: `translateX(${translateX}%)`,\n              transition: isDragging ? 'none' : 'transform 0.3s ease'\n            }}\n          >\n            {attorneys.map((attorney, index) => (\n              <AttorneyCard \n                key={index} \n                attorney={attorney} \n                onAddClick={handleAddClick}\n                isDragging={isDragging}\n                wasDragged={wasDragged}\n              />\n            ))}\n          </div>\n        </div>\n        \n        <button\n          className={`carousel-btn carousel-next ${currentPosition >= maxPosition ? 'disabled' : ''}`}\n          onClick={navigateNext}\n          disabled={currentPosition >= maxPosition}\n          aria-label=\"Next\"\n        >\n          <Icon name=\"chevron-right\" />\n        </button>\n      </div>\n\n      {/* Add to Network Modal */}\n      <AddToNetworkModal\n        isOpen={isModalOpen}\n        onClose={() => setIsModalOpen(false)}\n        attorney={selectedAttorney}\n        onAdd={handleAddToNetwork}\n      />\n    </section>\n  );\n};\n\nexport default AttorneyCarousel;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,IAAI,MAAM,SAAS;AAC1B,OAAOC,iBAAiB,MAAM,sBAAsB;AACpD,OAAO,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,YAAY,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,UAAU;EAAEC,UAAU;EAAEC;AAAW,CAAC,KAAK;EACzE,MAAMC,WAAW,GAAIC,CAAC,IAAK;IACzB;IACA,IAAIH,UAAU,IAAIC,UAAU,EAAE;MAC5BE,CAAC,CAACC,cAAc,CAAC,CAAC;MAClBD,CAAC,CAACE,eAAe,CAAC,CAAC;MACnB;IACF;IACAN,UAAU,CAACD,QAAQ,CAAC;EACtB,CAAC;EAED,oBACEF,OAAA;IAAKU,SAAS,EAAE,iBAAiBN,UAAU,GAAG,UAAU,GAAG,EAAE,EAAG;IAAAO,QAAA,gBAC9DX,OAAA;MAAKU,SAAS,EAAC,iBAAiB;MAAAC,QAAA,eAC9BX,OAAA;QACEY,GAAG,EAAE,oCAAoCV,QAAQ,CAACW,QAAQ,oBAAqB;QAC/EC,GAAG,EAAEZ,QAAQ,CAACa,IAAK;QACnBC,SAAS,EAAE;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNpB,OAAA;MAAKU,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5BX,OAAA;QAAIU,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAET,QAAQ,CAACa;MAAI;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAClDpB,OAAA;QAAGU,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAET,QAAQ,CAACmB;MAAI;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChDpB,OAAA;QAAGU,SAAS,EAAC,mBAAmB;QAAAC,QAAA,EAAET,QAAQ,CAACoB;MAAQ;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxDpB,OAAA;QAAKU,SAAS,EAAC,sBAAsB;QAAAC,QAAA,EAClCT,QAAQ,CAACqB,WAAW,CAACC,GAAG,CAAC,CAACC,SAAS,EAAEC,KAAK,kBACzC1B,OAAA;UAAkBU,SAAS,EAAC,eAAe;UAAAC,QAAA,EACxCc;QAAS,GADDC,KAAK;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEV,CACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACNpB,OAAA;MAAKU,SAAS,EAAC,kBAAkB;MAAAC,QAAA,eAC/BX,OAAA;QACEU,SAAS,EAAC,SAAS;QACnBiB,OAAO,EAAErB,WAAY;QAAAK,QAAA,EACtB;MAED;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACQ,EAAA,GA1CI3B,YAAY;AA4ClB,MAAM4B,gBAAgB,GAAGA,CAAC;EAAEC,SAAS;EAAEC,UAAU;EAAEC,KAAK;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EAC5E,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGxC,QAAQ,CAAC,CAAC,CAAC;EACzD,MAAM,CAACyC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG1C,QAAQ,CAAC,IAAI,CAAC;EAC9D,MAAM,CAAC2C,WAAW,EAAEC,cAAc,CAAC,GAAG5C,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACQ,UAAU,EAAEqC,aAAa,CAAC,GAAG7C,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAAC8C,SAAS,EAAEC,YAAY,CAAC,GAAG/C,QAAQ,CAAC;IAAEgD,CAAC,EAAE,CAAC;IAAEC,QAAQ,EAAE;EAAE,CAAC,CAAC;EACjE,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGnD,QAAQ,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACS,UAAU,EAAE2C,aAAa,CAAC,GAAGpD,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMqD,YAAY,GAAG,CAAC;EACtB,MAAMC,UAAU,GAAGpB,SAAS,CAACqB,MAAM;EACnC,MAAMC,WAAW,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEJ,UAAU,GAAGD,YAAY,CAAC;EAE1D,MAAMM,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAIpB,eAAe,GAAGiB,WAAW,EAAE;MACjChB,kBAAkB,CAACD,eAAe,GAAG,CAAC,CAAC;IACzC;EACF,CAAC;EAED,MAAMqB,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAIrB,eAAe,GAAG,CAAC,EAAE;MACvBC,kBAAkB,CAACD,eAAe,GAAG,CAAC,CAAC;IACzC;EACF,CAAC;EAED,MAAMsB,cAAc,GAAIvD,QAAQ,IAAK;IACnCoC,mBAAmB,CAACpC,QAAQ,CAAC;IAC7BsC,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,MAAMkB,kBAAkB,GAAIC,eAAe,IAAK;IAC9C,IAAI1B,aAAa,EAAE;MACjBA,aAAa,CAAC0B,eAAe,CAAC;IAChC;IACAnB,cAAc,CAAC,KAAK,CAAC;EACvB,CAAC;;EAED;EACA,MAAMoB,eAAe,GAAIrD,CAAC,IAAK;IAC7B;IACA,IAAIA,CAAC,CAACsD,MAAM,CAACC,SAAS,CAACC,QAAQ,CAAC,SAAS,CAAC,EAAE;MAC1C;IACF;IAEAxD,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBiC,aAAa,CAAC,IAAI,CAAC;IACnBO,aAAa,CAAC,KAAK,CAAC;IACpBL,YAAY,CAAC;MACXC,CAAC,EAAErC,CAAC,CAACyD,OAAO;MACZnB,QAAQ,EAAEV;IACZ,CAAC,CAAC;IACFY,aAAa,CAAC,CAAC,CAAC;IAChBkB,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,UAAU,GAAG,MAAM;EACzC,CAAC;EAED,MAAMC,eAAe,GAAI9D,CAAC,IAAK;IAC7B,IAAI,CAACH,UAAU,EAAE;IAEjB,MAAMkE,MAAM,GAAG/D,CAAC,CAACyD,OAAO,GAAGtB,SAAS,CAACE,CAAC;IACtC,MAAM2B,cAAc,GAAG,GAAG,CAAC,CAAC;IAC5B,MAAMC,YAAY,GAAG,CAACF,MAAM,GAAGC,cAAc;;IAE7C;IACA,IAAIlB,IAAI,CAACoB,GAAG,CAACH,MAAM,CAAC,GAAG,CAAC,EAAE;MACxBtB,aAAa,CAAC,IAAI,CAAC;IACrB;;IAEA;IACA,IAAI0B,WAAW,GAAGhC,SAAS,CAACG,QAAQ,GAAG2B,YAAY;IACnDE,WAAW,GAAGrB,IAAI,CAACC,GAAG,CAAC,CAAC,EAAED,IAAI,CAACsB,GAAG,CAACD,WAAW,EAAEtB,WAAW,CAAC,CAAC;IAE7D,MAAMwB,WAAW,GAAGF,WAAW,GAAGhC,SAAS,CAACG,QAAQ;IACpDE,aAAa,CAAC6B,WAAW,CAAC;EAC5B,CAAC;EAED,MAAMC,aAAa,GAAItE,CAAC,IAAK;IAC3B,IAAI,CAACH,UAAU,EAAE;IAEjBqC,aAAa,CAAC,KAAK,CAAC;IACpBwB,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,UAAU,GAAG,EAAE;;IAEnC;IACA,MAAMU,aAAa,GAAGpC,SAAS,CAACG,QAAQ,GAAGC,UAAU;;IAErD;IACA,IAAIiC,YAAY;IAChB,IAAI1B,IAAI,CAACoB,GAAG,CAAC3B,UAAU,CAAC,GAAG,GAAG,EAAE;MAC9B;MACAiC,YAAY,GAAGjC,UAAU,GAAG,CAAC,GAAGO,IAAI,CAAC2B,IAAI,CAACF,aAAa,CAAC,GAAGzB,IAAI,CAAC4B,KAAK,CAACH,aAAa,CAAC;IACtF,CAAC,MAAM;MACL;MACAC,YAAY,GAAG1B,IAAI,CAAC6B,KAAK,CAACJ,aAAa,CAAC;IAC1C;;IAEA;IACA,MAAMK,mBAAmB,GAAG9B,IAAI,CAACC,GAAG,CAAC,CAAC,EAAED,IAAI,CAACsB,GAAG,CAACI,YAAY,EAAE3B,WAAW,CAAC,CAAC;;IAE5E;IACAhB,kBAAkB,CAAC+C,mBAAmB,CAAC;IACvCpC,aAAa,CAAC,CAAC,CAAC;;IAEhB;IACAqC,UAAU,CAAC,MAAMpC,aAAa,CAAC,KAAK,CAAC,EAAE,GAAG,CAAC;EAC7C,CAAC;;EAED;EACA,MAAMqC,gBAAgB,GAAI9E,CAAC,IAAK;IAC9B;IACA,IAAIA,CAAC,CAACsD,MAAM,CAACC,SAAS,CAACC,QAAQ,CAAC,SAAS,CAAC,EAAE;MAC1C;IACF;IAEA,MAAMuB,KAAK,GAAG/E,CAAC,CAACgF,OAAO,CAAC,CAAC,CAAC;IAC1B9C,aAAa,CAAC,IAAI,CAAC;IACnBO,aAAa,CAAC,KAAK,CAAC;IACpBL,YAAY,CAAC;MACXC,CAAC,EAAE0C,KAAK,CAACtB,OAAO;MAChBnB,QAAQ,EAAEV;IACZ,CAAC,CAAC;IACFY,aAAa,CAAC,CAAC,CAAC;EAClB,CAAC;EAED,MAAMyC,eAAe,GAAIjF,CAAC,IAAK;IAC7B,IAAI,CAACH,UAAU,EAAE;IACjBG,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,MAAM8E,KAAK,GAAG/E,CAAC,CAACgF,OAAO,CAAC,CAAC,CAAC;IAC1B,MAAMjB,MAAM,GAAGgB,KAAK,CAACtB,OAAO,GAAGtB,SAAS,CAACE,CAAC;IAC1C,MAAM2B,cAAc,GAAG,GAAG;IAC1B,MAAMC,YAAY,GAAG,CAACF,MAAM,GAAGC,cAAc;IAE7C,IAAIG,WAAW,GAAGhC,SAAS,CAACG,QAAQ,GAAG2B,YAAY;IACnDE,WAAW,GAAGrB,IAAI,CAACC,GAAG,CAAC,CAAC,EAAED,IAAI,CAACsB,GAAG,CAACD,WAAW,EAAEtB,WAAW,CAAC,CAAC;IAE7D,MAAMwB,WAAW,GAAGF,WAAW,GAAGhC,SAAS,CAACG,QAAQ;IACpDE,aAAa,CAAC6B,WAAW,CAAC;EAC5B,CAAC;EAED,MAAMa,cAAc,GAAGA,CAAA,KAAM;IAC3B,IAAI,CAACrF,UAAU,EAAE;IAEjBqC,aAAa,CAAC,KAAK,CAAC;;IAEpB;IACA,MAAMqC,aAAa,GAAGpC,SAAS,CAACG,QAAQ,GAAGC,UAAU;;IAErD;IACA,IAAIiC,YAAY;IAChB,IAAI1B,IAAI,CAACoB,GAAG,CAAC3B,UAAU,CAAC,GAAG,GAAG,EAAE;MAC9B;MACAiC,YAAY,GAAGjC,UAAU,GAAG,CAAC,GAAGO,IAAI,CAAC2B,IAAI,CAACF,aAAa,CAAC,GAAGzB,IAAI,CAAC4B,KAAK,CAACH,aAAa,CAAC;IACtF,CAAC,MAAM;MACL;MACAC,YAAY,GAAG1B,IAAI,CAAC6B,KAAK,CAACJ,aAAa,CAAC;IAC1C;;IAEA;IACA,MAAMK,mBAAmB,GAAG9B,IAAI,CAACC,GAAG,CAAC,CAAC,EAAED,IAAI,CAACsB,GAAG,CAACI,YAAY,EAAE3B,WAAW,CAAC,CAAC;IAE5EhB,kBAAkB,CAAC+C,mBAAmB,CAAC;IACvCpC,aAAa,CAAC,CAAC,CAAC;EAClB,CAAC;;EAED;EACApD,KAAK,CAAC+F,SAAS,CAAC,MAAM;IACpB,IAAItF,UAAU,EAAE;MACd6D,QAAQ,CAAC0B,gBAAgB,CAAC,WAAW,EAAEtB,eAAe,CAAC;MACvDJ,QAAQ,CAAC0B,gBAAgB,CAAC,SAAS,EAAEd,aAAa,CAAC;MACnD,OAAO,MAAM;QACXZ,QAAQ,CAAC2B,mBAAmB,CAAC,WAAW,EAAEvB,eAAe,CAAC;QAC1DJ,QAAQ,CAAC2B,mBAAmB,CAAC,SAAS,EAAEf,aAAa,CAAC;MACxD,CAAC;IACH;EACF,CAAC,EAAE,CAACzE,UAAU,EAAEsC,SAAS,EAAEI,UAAU,EAAEM,WAAW,CAAC,CAAC;EAEpD,MAAMyC,UAAU,GAAG,EAAE,CAAC1D,eAAe,GAAGW,UAAU,KAAK,GAAG,GAAGG,YAAY,CAAC,CAAC;EAE3E,oBACEjD,OAAA;IAASU,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBACnCX,OAAA;MAAIU,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAEqB;IAAK;MAAAf,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC1CpB,OAAA;MAAKU,SAAS,EAAC,oBAAoB;MAAAC,QAAA,gBACjCX,OAAA;QACEU,SAAS,EAAE,8BAA8ByB,eAAe,KAAK,CAAC,GAAG,UAAU,GAAG,EAAE,EAAG;QACnFR,OAAO,EAAE6B,YAAa;QACtBsC,QAAQ,EAAE3D,eAAe,KAAK,CAAE;QAChC,cAAW,UAAU;QAAAxB,QAAA,eAErBX,OAAA,CAACH,IAAI;UAACkB,IAAI,EAAC;QAAc;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtB,CAAC,eAETpB,OAAA;QACEU,SAAS,EAAC,mBAAmB;QAC7BqF,WAAW,EAAEnC,eAAgB;QAC7BoC,YAAY,EAAEX,gBAAiB;QAC/BY,WAAW,EAAET,eAAgB;QAC7BU,UAAU,EAAET,cAAe;QAAA9E,QAAA,eAE3BX,OAAA;UACEU,SAAS,EAAE,2BAA2BN,UAAU,GAAG,UAAU,GAAG,EAAE,EAAG;UACrE+D,KAAK,EAAE;YACLgC,SAAS,EAAE,cAAcN,UAAU,IAAI;YACvCO,UAAU,EAAEhG,UAAU,GAAG,MAAM,GAAG;UACpC,CAAE;UAAAO,QAAA,EAEDmB,SAAS,CAACN,GAAG,CAAC,CAACtB,QAAQ,EAAEwB,KAAK,kBAC7B1B,OAAA,CAACC,YAAY;YAEXC,QAAQ,EAAEA,QAAS;YACnBC,UAAU,EAAEsD,cAAe;YAC3BrD,UAAU,EAAEA,UAAW;YACvBC,UAAU,EAAEA;UAAW,GAJlBqB,KAAK;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAKX,CACF;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAENpB,OAAA;QACEU,SAAS,EAAE,8BAA8ByB,eAAe,IAAIiB,WAAW,GAAG,UAAU,GAAG,EAAE,EAAG;QAC5FzB,OAAO,EAAE4B,YAAa;QACtBuC,QAAQ,EAAE3D,eAAe,IAAIiB,WAAY;QACzC,cAAW,MAAM;QAAAzC,QAAA,eAEjBX,OAAA,CAACH,IAAI;UAACkB,IAAI,EAAC;QAAe;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAGNpB,OAAA,CAACF,iBAAiB;MAChBuG,MAAM,EAAE9D,WAAY;MACpB+D,OAAO,EAAEA,CAAA,KAAM9D,cAAc,CAAC,KAAK,CAAE;MACrCtC,QAAQ,EAAEmC,gBAAiB;MAC3BkE,KAAK,EAAE7C;IAAmB;MAAAzC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAEd,CAAC;AAACc,EAAA,CA3OIL,gBAAgB;AAAA2E,GAAA,GAAhB3E,gBAAgB;AA6OtB,eAAeA,gBAAgB;AAAC,IAAAD,EAAA,EAAA4E,GAAA;AAAAC,YAAA,CAAA7E,EAAA;AAAA6E,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}