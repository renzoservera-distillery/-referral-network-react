{"ast":null,"code":"import _objectSpread from\"/Users/renzoservera/Desktop/referral-network-react/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _objectWithoutProperties from\"/Users/renzoservera/Desktop/referral-network-react/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";const _excluded=[\"name\",\"size\",\"className\"];import React from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const Icon=_ref=>{let{name,size=24,className=''}=_ref,props=_objectWithoutProperties(_ref,_excluded);const[svgContent,setSvgContent]=React.useState(null);const[error,setError]=React.useState(false);const[loading,setLoading]=React.useState(true);React.useEffect(()=>{const loadSvg=async()=>{try{setLoading(true);setError(false);// Import the SVG file as a URL and fetch its content\nconst svgModule=await import(\"../../assets/icons/\".concat(name,\".svg\"));const svgUrl=svgModule.default;// Fetch the SVG content\nconst response=await fetch(svgUrl);const svgText=await response.text();// Create a parser to extract the SVG content\nconst parser=new DOMParser();const svgDoc=parser.parseFromString(svgText,'image/svg+xml');const svgElement=svgDoc.querySelector('svg');if(svgElement){// Extract viewBox and paths\nconst viewBox=svgElement.getAttribute('viewBox');const paths=svgElement.querySelectorAll('path');const pathData=Array.from(paths).map(path=>({d:path.getAttribute('d'),fill:path.getAttribute('stroke')?'none':'currentColor',stroke:path.getAttribute('stroke')?'currentColor':'none',strokeWidth:path.getAttribute('stroke-width')||path.getAttribute('strokeWidth')||'1',strokeLinecap:path.getAttribute('stroke-linecap')||path.getAttribute('strokeLinecap')||'butt',strokeLinejoin:path.getAttribute('stroke-linejoin')||path.getAttribute('strokeLinejoin')||'miter',fillOpacity:path.getAttribute('fillOpacity')||path.getAttribute('fill-opacity')||'1'}));setSvgContent({viewBox,paths:pathData});}else{throw new Error('Invalid SVG');}setLoading(false);}catch(err){console.warn(\"Icon \\\"\".concat(name,\"\\\" not found or invalid in assets/icons/ folder\"));setError(true);setLoading(false);setSvgContent(null);}};loadSvg();},[name]);if(error){// Fallback: render a simple placeholder\nreturn/*#__PURE__*/_jsx(\"div\",_objectSpread({className:\"icon-wrapper icon-placeholder \".concat(className),style:{width:size,height:size,backgroundColor:'currentColor',opacity:0.3,borderRadius:'2px',display:'inline-block'}},props));}if(loading||!svgContent){// Loading state\nreturn/*#__PURE__*/_jsx(\"div\",_objectSpread({className:\"icon-wrapper icon-loading \".concat(className),style:{width:size,height:size,backgroundColor:'currentColor',opacity:0.1,borderRadius:'2px',display:'inline-block'}},props));}return/*#__PURE__*/_jsx(\"div\",_objectSpread(_objectSpread({className:\"icon-wrapper \".concat(className)},props),{},{children:/*#__PURE__*/_jsx(\"svg\",{width:size,height:size,viewBox:svgContent.viewBox,fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",style:{display:'block'},children:svgContent.paths.map((pathData,index)=>/*#__PURE__*/_jsx(\"path\",{d:pathData.d,fill:pathData.fill,stroke:pathData.stroke,strokeWidth:pathData.strokeWidth,strokeLinecap:pathData.strokeLinecap,strokeLinejoin:pathData.strokeLinejoin,fillOpacity:pathData.fillOpacity},index))})}));};export default Icon;","map":{"version":3,"names":["React","jsx","_jsx","Icon","_ref","name","size","className","props","_objectWithoutProperties","_excluded","svgContent","setSvgContent","useState","error","setError","loading","setLoading","useEffect","loadSvg","svgModule","concat","svgUrl","default","response","fetch","svgText","text","parser","DOMParser","svgDoc","parseFromString","svgElement","querySelector","viewBox","getAttribute","paths","querySelectorAll","pathData","Array","from","map","path","d","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","fillOpacity","Error","err","console","warn","_objectSpread","style","width","height","backgroundColor","opacity","borderRadius","display","children","xmlns","index"],"sources":["/Users/renzoservera/Desktop/referral-network-react/src/components/Icon/Icon.jsx"],"sourcesContent":["import React from 'react';\n\nconst Icon = ({ name, size = 24, className = '', ...props }) => {\n  const [svgContent, setSvgContent] = React.useState(null);\n  const [error, setError] = React.useState(false);\n  const [loading, setLoading] = React.useState(true);\n\n  React.useEffect(() => {\n    const loadSvg = async () => {\n      try {\n        setLoading(true);\n        setError(false);\n        \n        // Import the SVG file as a URL and fetch its content\n        const svgModule = await import(`../../assets/icons/${name}.svg`);\n        const svgUrl = svgModule.default;\n        \n        // Fetch the SVG content\n        const response = await fetch(svgUrl);\n        const svgText = await response.text();\n        \n        // Create a parser to extract the SVG content\n        const parser = new DOMParser();\n        const svgDoc = parser.parseFromString(svgText, 'image/svg+xml');\n        const svgElement = svgDoc.querySelector('svg');\n        \n        if (svgElement) {\n          // Extract viewBox and paths\n          const viewBox = svgElement.getAttribute('viewBox');\n          const paths = svgElement.querySelectorAll('path');\n          const pathData = Array.from(paths).map(path => ({\n            d: path.getAttribute('d'),\n            fill: path.getAttribute('stroke') ? 'none' : 'currentColor',\n            stroke: path.getAttribute('stroke') ? 'currentColor' : 'none',\n            strokeWidth: path.getAttribute('stroke-width') || path.getAttribute('strokeWidth') || '1',\n            strokeLinecap: path.getAttribute('stroke-linecap') || path.getAttribute('strokeLinecap') || 'butt',\n            strokeLinejoin: path.getAttribute('stroke-linejoin') || path.getAttribute('strokeLinejoin') || 'miter',\n            fillOpacity: path.getAttribute('fillOpacity') || path.getAttribute('fill-opacity') || '1'\n          }));\n          \n          setSvgContent({ viewBox, paths: pathData });\n        } else {\n          throw new Error('Invalid SVG');\n        }\n        \n        setLoading(false);\n      } catch (err) {\n        console.warn(`Icon \"${name}\" not found or invalid in assets/icons/ folder`);\n        setError(true);\n        setLoading(false);\n        setSvgContent(null);\n      }\n    };\n\n    loadSvg();\n  }, [name]);\n\n  if (error) {\n    // Fallback: render a simple placeholder\n    return (\n      <div \n        className={`icon-wrapper icon-placeholder ${className}`} \n        style={{\n          width: size,\n          height: size,\n          backgroundColor: 'currentColor',\n          opacity: 0.3,\n          borderRadius: '2px',\n          display: 'inline-block'\n        }}\n        {...props}\n      />\n    );\n  }\n\n  if (loading || !svgContent) {\n    // Loading state\n    return (\n      <div \n        className={`icon-wrapper icon-loading ${className}`} \n        style={{\n          width: size,\n          height: size,\n          backgroundColor: 'currentColor',\n          opacity: 0.1,\n          borderRadius: '2px',\n          display: 'inline-block'\n        }}\n        {...props}\n      />\n    );\n  }\n\n  return (\n    <div className={`icon-wrapper ${className}`} {...props}>\n      <svg\n        width={size}\n        height={size}\n        viewBox={svgContent.viewBox}\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        style={{ \n          display: 'block'\n        }}\n      >\n        {svgContent.paths.map((pathData, index) => (\n          <path\n            key={index}\n            d={pathData.d}\n            fill={pathData.fill}\n            stroke={pathData.stroke}\n            strokeWidth={pathData.strokeWidth}\n            strokeLinecap={pathData.strokeLinecap}\n            strokeLinejoin={pathData.strokeLinejoin}\n            fillOpacity={pathData.fillOpacity}\n          />\n        ))}\n      </svg>\n    </div>\n  );\n};\n\nexport default Icon;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}